// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.224.2/containers/docker-existing-docker-compose
{
	"name": "iris-python-template devcontainer",

	// Use the same recipe as creates the container we use when working locally.
	"dockerComposeFile": [
		"../docker-compose.yml"
	],

	"service": "iris",

	"workspaceFolder": "/irisdev/app",

	// This provides the elements of the connection object which require different values when connecting to the workspace within the container,
	// versus those in .vscode/settings.json which apply when operating locally on the workspace files.
	//
	// The `"server": ""` setting prevents falling back to a user-level `objectscript.conn` that points to a `server` entry in `intersystems.servers`
	"settings": {
		"objectscript.conn" :{
			"server": "",
			"host": "localhost",
			"port": 52773,
			"active": true,
		}	
	},

	// Add the IDs of extensions we want installed when the container is created.
	// Currently (March 2022) `intersystems.language-server` fails to run within the container (alpine platform).
	// Issue is probably https://github.com/intersystems/language-server/issues/185 and/or https://github.com/intersystems/language-server/issues/32
	// Crash gets reported to the user, after which `intersystems-community.vscode-objectscript` falls back to
	// using its TextMate grammar for code coloring.
	"extensions": [
		"ms-toolsai.jupyter",
		"ms-toolsai.jupyter-renderers",
		"ms-python.python",
		"ms-python.vscode-pylance",
		"intersystems-community.vscode-objectscript",
        "intersystems.language-server",
		"intersystems-community.servermanager",
	],
}
